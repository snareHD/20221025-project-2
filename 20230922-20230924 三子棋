//该项目包含三个文件
//第一个文件：头文件  game.h     --函数的声明
#define  _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<string.h>

#define ROW 3
#define COLUMN 3
void begain_game(char arr[ROW][COLUMN], int row, int column);
void create_ui(char arr[ROW][COLUMN], int row, int column);
void player_game(char arr[ROW][COLUMN],int row,int column);
void computer_game(char arr[ROW][COLUMN], int row, int column);


//玩家赢 返回'*'
//电脑赢 返回'#'
//平局   返回'q'
//继续   返回'h'
char decide(char arr[ROW][COLUMN], int row, int column);






//第二个文件：源文件  game.c    --函数的定义
#define  _CRT_SECURE_NO_WARNINGS 1

#include"game.h"
void begain_game(char arr[ROW][COLUMN], int row, int column)  //初始化数组
{
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < column; j++)
		{
			arr[i][j] = ' ';
		}
		
	}
	printf("\n");
	

}
void create_ui(char arr[ROW][COLUMN], int row, int column)    //打印棋盘
{ 
	for (int q = 0; q < row; q++)
	{
		for (int w = 0; w < column; w++)
		{
			printf(" %c ",arr[q][w]);
			if (w < column - 1)
			{
				printf("|");
			}
		}
		printf("\n");
		if (q < row - 1)
		{
			
			for (int e = 0; e < column; e++)
			{
				printf("---");
				if (e < column - 1)
				{
					printf("|");
				}

			}
			
		}
		printf("\n");
	}

}

void player_game(char arr[ROW][COLUMN],int row, int column)   //玩家操作
{
	int x = 0;
	int y = 0;
	printf("请玩家输入坐标：");
	while (1)
	{
	
		scanf_s("%d%d", &x, &y);
		if (x >= 1 && x <= row && y >= 1 && y <= column)
		{
			if (arr[x - 1][y - 1] == ' ')
			{
				arr[x - 1][y - 1] = '*';
				break;

			}
			else
			{
				printf("输入坐标已被占用，请重新输入\n");
			}
		}
		else
		{
			printf("输入坐标有误，请重新输入\n");
		}
	}
}



void computer_game(char arr[ROW][COLUMN], int row, int column)  //电脑操作
{
	int x_ai = 0;
	int y_ai = 0;
	
	printf("电脑输入坐标：\n");
	while (1)
	{
		x_ai = rand() % 3;
		y_ai = rand() % 3;
		if (x_ai >= 0 && x_ai <= 2 && y_ai >= 0 && y_ai <= 2)
		{
			if (arr[x_ai][y_ai] == ' ')
			{
				arr[x_ai][y_ai] = '#';
				break;

			}
			
		}
	}
}


int judg(char arr[ROW][COLUMN], int row, int column)
{
	for (int x = 0; x < row; x++)
	{
		for (int y = 0; y < column; y++)
		{
			if (arr[x][y] == ' ')
			{
				return 0;   //判断棋盘未满的条件
			}
			 
		}
	}

	return 1;     

}


char decide(char arr[ROW][COLUMN], int row, int column)  //判断输赢
{

	int i = 0;
	for (i = 0; i < row;i++)	//判断横三行
	{
		if (arr[i][0] == arr[i][1] && arr[i][1] == arr[i][2] && arr[i][0] != ' ')
		{
			return arr[i][0];
		}
	}

	for (i = 0; i < column; i++)	//判断竖三列
	{
		if (arr[0][i] == arr[1][i] && arr[1][i] == arr[2][i] && arr[0][i] != ' ')
		{
			return arr[0][i];
		}
	}

	if ((arr[0][0] == arr[1][1] && arr[1][1] == arr[2][2] && arr[0][0] != ' ')||(arr[0][2]==arr[1][1]&&arr[1][1]==arr[2][0]&&arr[0][2]!=' '))//判断交叉
	{
		return arr[1][1];
	}

	if (1==judg(arr,ROW,COLUMN))   //判断是否继续
	{
		return 'q';
	}
	return 'h';

}




//第三个文件：源文件  test.c   
#define  _CRT_SECURE_NO_WARNINGS 1

#include"game.h"
void menu()
{
	printf("**************************\n");
	printf("**1.开始游戏  0.结束游戏**\n");
	printf("**************************\n");
}
void date()
{
	srand((unsigned int)time(NULL));
	char arr[ROW][COLUMN] = { 0 };
	begain_game(arr, ROW, COLUMN);  //初始化二维数组
	create_ui(arr, ROW, COLUMN);//搭建背景平台    //显示棋盘
	char de=0;
	while (1)
	{
		player_game(arr, ROW, COLUMN);//玩家操作
		create_ui(arr, ROW, COLUMN);//搭建背景平台    //显示棋盘
		 de = decide(arr, ROW, COLUMN);//判断输赢
		if (de != 'h')
		{
			break;
		}

		computer_game(arr, ROW, COLUMN);//电脑操作
		create_ui(arr, ROW, COLUMN);//搭建背景平台    //显示棋盘
		de = decide(arr, ROW, COLUMN);//判断输赢
		if (de != 'h')
		{
			break;
		}
	}
	if(de == '*')
	{
		printf("玩家取得胜利\n");
	}
	else if(de == '#')
	{
		printf("电脑取得胜利\n");
	}
	else
	{
		printf("平局\n");
	}
}

void play_game()
{
	int a = 0;
	do
	{
		menu();
		printf("请开始游戏—>：");
		scanf_s("%d", &a);
		switch (a)
		{
		case 1:
			printf("开始游戏:\n");
			 date();
			break;
		case 0:
			printf("结束游戏:\n");
			break;
		default:
			printf("输入错误，重新选择\n");
			break;
		}
	
	} while ( a );
	
}

int main()
{
	play_game();
	return 0;
}





